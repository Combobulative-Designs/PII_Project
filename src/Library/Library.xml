<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="T:ClassLibrary.TelegramAPI">
            <summary>
            API de interaccion con el servicio
            de mensajeria Telegram.
            </summary>
        </member>
        <member name="M:ClassLibrary.TelegramAPI.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClassLibrary.TelegramAPI.HandleUpdateAsync(Telegram.Bot.Types.Update,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="update"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.TelegramAPI.HandleErrorAsync(System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handler para el caso de presentarse un error
            al manejar un mensaje.
            </summary>
            <param name="exception">
            Excepcion a manejar.
            </param>
            <param name="cancellationToken">
            Token de cancelacion.
            </param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.TelegramAPI.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClassLibrary.UserAuthenticator">
            <summary>
            Clase que expone los metodos necesarios para 
            procesar un
            </summary>
        </member>
        <member name="M:ClassLibrary.UserAuthenticator.Authenticate(ClassLibrary.MessageWrapper)">
            <summary>
            AÃ±ade informacion del usuario y su estado de registro
            al contenedor de mensaje recibido.
            </summary>
            <param name="message">
            Contenedor del mensaje enviado por el usuario.
            </param>
        </member>
        <member name="T:ClassLibrary.ChatDialogEntry">
            <summary>
            Punto de entrada a la cadena de responsabilidad asociada
            a la navegacion del chat con el bot por el usuario.
            </summary>
        </member>
        <member name="M:ClassLibrary.ChatDialogEntry.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.ChatDialogEntry"/>.
            Esta instancia ya pre-configura la cadena de responsabilidad entera
            para ser inicializada con el metodo <see cref="M:ClassLibrary.ChatDialogEntry.Start(ClassLibrary.ChatDialogSelector)"/>
            </summary>
        </member>
        <member name="M:ClassLibrary.ChatDialogEntry.Start(ClassLibrary.ChatDialogSelector)">
            <summary>
            Inicia el proceso de la cadena de responsabilidad
            de acuerdo a un selector recibido.
            </summary>
            <param name="selector">
            Contenedor de los datos precisos por la cadena
            de responsabilidad.
            </param>
            <returns>
            string con el resultado de ejecutar
            la cadena
            </returns>
        </member>
        <member name="T:ClassLibrary.ChatDialogHandlerBase">
            <summary>
            Clase base para la implementacion del patron
            Cadena de Responsabilidad a los dialogos de
            chat con el Bot, Todos los pasos de la cadena
            representando dialogos con el Bot deben implementar
            esta clase.
            </summary>
        </member>
        <member name="F:ClassLibrary.ChatDialogHandlerBase.route">
            <summary>
            Comando al que responde el paso concreto
            en caso de ser nulo, se debe sobreescribir
            el <see cref="M:ClassLibrary.ChatDialogHandlerBase.ValidateDataEntry(ClassLibrary.ChatDialogSelector)"/> con la nueva
            condicion a evaluar.
            </summary>
        </member>
        <member name="F:ClassLibrary.ChatDialogHandlerBase.parents">
            <summary>
            Listado de pasos concretos por su codigo
            donde el usuario debe estar ubicado 
            (su contexto) para que este paso responda
            a un mensaje.
            </summary>
        </member>
        <member name="F:ClassLibrary.ChatDialogHandlerBase.sessions">
            <summary>
            Objeto contenedor de las sesiones
            de de usuarios.
            </summary>
        </member>
        <member name="F:ClassLibrary.ChatDialogHandlerBase.datMgr">
            <summary>
            Acceso a los administradores de datos
            persistentes.
            </summary>
        </member>
        <member name="M:ClassLibrary.ChatDialogHandlerBase.#ctor(ClassLibrary.ChatDialogHandlerBase,System.String)">
            <summary>
            Constructor que actua de intermediario entre la el paso
            concreto y <see cref="T:ClassLibrary.CorHandler`2"/> para configurar el siguiente paso
            y el codigo identificador de paso en la cadena.
            </summary>
            <param name="next">
            Siguiente handler en la cadena de
            responsabilidad.
            </param>
            <param name="code">
            Codigo identificador del handler concreto en la cadena.
            </param>
        </member>
        <member name="M:ClassLibrary.ChatDialogHandlerBase.Next(ClassLibrary.ChatDialogSelector)">
            <summary>
            Llama a <see cref="M:ClassLibrary.ChatDialogHandlerBase.ValidateDataEntry(ClassLibrary.ChatDialogSelector)"/> para evaluar si
            este handler es el correcto que debe ejecutar su codigo.
            Si no lo es, llama al handler siguiente en la cadena.
            </summary>
            <param name="selector">
            Contenedor con los datos para evaluar si este es el paso
            correcto, y con aquellos necesarios para ejecutar el 
            codigo asociado al paso.
            </param>
            <returns>
            <c>string</c> con el mensaje de respuesta
            al usuario.
            </returns>
        </member>
        <member name="M:ClassLibrary.ChatDialogHandlerBase.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <summary>
            Valida de acuerdo al selector, si el handler actual es
            el correcto que debe ejecutar su codigo.
            </summary>
            <param name="selector">
            Contenedor con los datos para evaluar si este es el paso
            correcto.
            </param>
            <returns>
            <c>bool</c> indicando si el handler actual
            es el correcto o no.
            </returns>
        </member>
        <member name="T:ClassLibrary.ChatDialogSelector">
            <summary>
            Selector para la cadena de responsabilidad 
            usada en el dialogo de chat con el Bot.
            </summary>
        </member>
        <member name="M:ClassLibrary.ChatDialogSelector.#ctor(ClassLibrary.MessageWrapper,System.String,System.String[])">
            <summary>
            Crea un nuevo selector.
            </summary>
            <param name="message">
            Contenedor del mensaje del usuario recibido.
            </param>
            <param name="context">
            Localizacion actual en el arbol de dialogos
            del usuario.
            </param>
            <param name="args">
            Argumentos (no utilizado).
            </param>
        </member>
        <member name="P:ClassLibrary.ChatDialogSelector.Context">
            <summary>
            Localizacion actual en el arbol de dialogos
            del usuario.
            </summary>
        </member>
        <member name="P:ClassLibrary.ChatDialogSelector.Args">
            <summary>
            Argumentos (no utilizado).
            </summary>
        </member>
        <member name="P:ClassLibrary.ChatDialogSelector.Code">
            <summary>
            Codigo ingresado por el usuario en el mensaje
            recibido.
            </summary>
        </member>
        <member name="P:ClassLibrary.ChatDialogSelector.Account">
            <summary>
            Cuenta en el servicio de mensajeria del
            usuario que envio el mensaje
            </summary>
        </member>
        <member name="P:ClassLibrary.ChatDialogSelector.Service">
            <summary>
            Servicio de mensajeria desde el que
            se recibio el mensaje del usuario.
            </summary>
        </member>
        <member name="T:ClassLibrary.CDH_BadCommand">
            <summary>
            ChatDialogHandler concreto:
            Responde a un comando incorrecto.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_BadCommand.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_BadCommand"/>.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_BadCommand.Next(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_BadCommand.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SessionExpired">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            no registrado en la plataforma.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SessionExpired.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SessionExpired"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SessionExpired.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_WelcomeCompany">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeCompany.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_WelcomeCompany"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeCompany.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeCompany.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_WelcomeEntrepreneur">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            emprendedor.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeEntrepreneur.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_WelcomeEntrepreneur"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeEntrepreneur.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeEntrepreneur.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_WelcomeSysAdmin">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de la plataforma.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeSysAdmin.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_WelcomeSysAdmin"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeSysAdmin.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeSysAdmin.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_WelcomeUnregistered">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            no registrado en la plataforma.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeUnregistered.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_WelcomeUnregistered"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_WelcomeUnregistered.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Company_Tracing_Menu">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Company_Tracing_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_WelcomeCompany"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Company_Tracing_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_VentasLista">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_VentasLista.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_WelcomeCompany"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_VentasLista.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyActionsMaterialMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyActionsMaterialMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_WelcomeCompany"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyActionsMaterialMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyActionsMaterialMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyAddMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyAddMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyAddMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyAddMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyConfirmationEraseMaterialMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyConfirmationEraseMaterialMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyConfirmationEraseMaterialMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyConfirmationEraseMaterialMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyEraseDataMaterialMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyEraseDataMaterialMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyEraseDataMaterialMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyEraseDataMaterialMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyListMaterialsMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyListMaterialsMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyListMaterialsMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyListMaterialsMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialAddConfirmationMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddConfirmationMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialAddConfirmationMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddConfirmationMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddConfirmationMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialAddDataMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddDataMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialAddDataMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddDataMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialAddNameMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddNameMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialAddNameMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddNameMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialAddNameMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialModifiConfirmationMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiConfirmationMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialModifiConfirmationMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiConfirmationMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiConfirmationMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialModifiDataMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiDataMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialModifiDataMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiDataMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialModifiDateBetweenReStockMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiDateBetweenReStockMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialModifiDateBetweenReStockMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiDateBetweenReStockMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiDateBetweenReStockMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialModifiNameMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiNameMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialModifiNameMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiNameMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiNameMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialModifiQuantityMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiQuantityMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialModifiQuantityMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiQuantityMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiQuantityMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyMaterialModifiUbicationMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiUbicationMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyMaterialModifiUbicationMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiUbicationMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyMaterialModifiUbicationMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyModifiMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyModifiMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyModifiMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyModifiMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyQualificationAddConfirmationMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationAddConfirmationMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyQualificationAddConfirmationMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationAddConfirmationMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationAddConfirmationMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyQualificationAddDataMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationAddDataMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyQualificationAddDataMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationAddDataMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyQualificationConfirmEraseMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationConfirmEraseMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyQualificationConfirmEraseMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationConfirmEraseMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationConfirmEraseMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyQualificationEraseDataMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationEraseDataMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyQualificationEraseDataMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationEraseDataMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyQualificationListToAddMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationListToAddMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyQualificationListToAddMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationListToAddMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyQualificationsListToEraseMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationsListToEraseMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyQualificationsListToEraseMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationsListToEraseMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyQualificationsMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationsMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyQualificationsMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyQualificationsMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationActionMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationActionMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationActionMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationActionMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationActionMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationAddDataMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationAddDataMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationAddDataMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationAddDataMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationConfirmationAddMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationConfirmationAddMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationConfirmationAddMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationConfirmationAddMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationConfirmationAddMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationConfirmationEraseMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationConfirmationEraseMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationConfirmationEraseMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationConfirmationEraseMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationConfirmationEraseMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationEraseDataMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationEraseDataMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationEraseDataMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationEraseDataMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationListMaterialsToAddMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationListMaterialsToAddMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationListMaterialsToAddMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationListMaterialsToAddMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationListMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationListMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationListMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationListMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationPriceMaterialToAddMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationPriceMaterialToAddMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationPriceMaterialToAddMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationPriceMaterialToAddMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationPriceMaterialToAddMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_CompanyPublicationQuantityMaterialToAddMenu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un usuario
            administrador de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationQuantityMaterialToAddMenu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_CompanyPublicationQuantityMaterialToAddMenu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationQuantityMaterialToAddMenu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_CompanyPublicationQuantityMaterialToAddMenu.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Confirmation_Sale_Category">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la confirmaciÃ³n de la Â´publicaciÃ³n.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Confirmation_Sale_Category.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Confirmation_Sale_Category"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Confirmation_Sale_Category.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Confirmation_Sale_KeyWord">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la confirmaciÃ³n de la Â´publicaciÃ³n.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Confirmation_Sale_KeyWord.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Confirmation_Sale_KeyWord"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Confirmation_Sale_KeyWord.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Confirmation_Sale_Location">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la confirmaciÃ³n de la Â´publicaciÃ³n.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Confirmation_Sale_Location.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Confirmation_Sale_Location"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Confirmation_Sale_Location.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Final_Sale_Category">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la transacciÃ³n de la compra.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Final_Sale_Category.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Final_Sale_Category"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Final_Sale_Category.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Final_Sale_Keyword">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la transacciÃ³n de la compra.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Final_Sale_Keyword.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Final_Sale_Keyword"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Final_Sale_Keyword.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Final_Sale_Location">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la transacciÃ³n de la compra.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Final_Sale_Location.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Final_Sale_Location"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Final_Sale_Location.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_List_Category_Menu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Muestra una lista de publicaciones por localidad.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_List_Category_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_List_Category_Menu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_List_Category_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_List_KeyWords_Menu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Muestra una lista de publicaciones.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_List_KeyWords_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_List_KeyWords_Menu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_List_KeyWords_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_List_Location_Menu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Muestra una lista de publicaciones por localidad.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_List_Location_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_List_Location_Menu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_List_Location_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Sale_Publication_Category">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la compra de la Â´publicaciÃ³n.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Sale_Publication_Category.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Sale_Publication_Category"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Sale_Publication_Category.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Sale_Publication_KeyWord">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la compra de la Â´publicaciÃ³n.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Sale_Publication_KeyWord.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Sale_Publication_KeyWord"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Sale_Publication_KeyWord.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Sale_Publication_Location">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Realiza la compra de la Â´publicaciÃ³n.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Sale_Publication_Location.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Sale_Publication_Location"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Sale_Publication_Location.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Search_Category_Menu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Busca una publicaciÃ³n por una categoria del material
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Search_Category_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Search_Category_Menu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Search_Category_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Search_KeyWord_Menu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Busca una publicaciÃ³n con una palabra clave
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Search_KeyWord_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Search_KeyWord_Menu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Search_KeyWord_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Search_Location_Menu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Busca una publicaciÃ³n con una palabra clave
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Search_Location_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Search_Location_Menu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Search_Location_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_Search_Publication_Menu">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio de un emprendedor.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_Search_Publication_Menu.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_Search_Publication_Menu"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_Search_Publication_Menu.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpBadCode">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al ingreso de un codigo de invitacion
            no valido o ya utilizado. Se vuelve a pedir
            al usuario que ingrese otro codigo o se le da
            la opcion de cancelar el proceso.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpBadCode.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpBadCode"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpBadCode.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpBadCode.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpCancel">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al ingreso del comando de cancelar
            mientras se esta en uno de los pasos pertenecientes
            al proceso de registro de usuarios. Devuelve al
            usuario al menu de bienvenida.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCancel.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpCancel"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCancel.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpCode">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al inicio del proceso de registro.
            Le pide al usuario introducir su codigo de
            registro.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCode.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpCode"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCode.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpCompanyName">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del apellido del
            usuario cuando el registro es para una nuevo
            empresa. Procede a pedirle al usuario el nombre
            de la empresa a ingresar.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCompanyName.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpCompanyName"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCompanyName.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCompanyName.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpCompanyTrade">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del nombre de la
            empresa a agregar. Procede a pedirle al
            usuario introducir el oficio de la Empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCompanyTrade.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpCompanyTrade"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCompanyTrade.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpCompanyTrade.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpDoneCompanyNew">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la confirmacion de los datos
            ingresados en el registro de una nueva
            empresa. Ingresa los datos al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneCompanyNew.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpDoneCompanyNew"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneCompanyNew.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpDoneEntrepreneurNew">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la confirmacion de los datos
            ingresados en el registro de una nueva
            empresa. Ingresa los datos al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneEntrepreneurNew.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpDoneEntrepreneurNew"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneEntrepreneurNew.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpDoneJoinCompany">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la confirmacion de los datos
            ingresados en el registro de un usiario  
            a una compaÃ±Ã­a ya existente. Ingresa los
            datos al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneJoinCompany.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpDoneJoinCompany"/>.
            </summary>
            <param name="next">Siguiente handler</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneJoinCompany.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpDoneSysAdmin">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la confirmacion de los datos
            ingresados en el registro de un nuevo 
            administrador de la plataforma. Ingresa los
            datos al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneSysAdmin.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpDoneSysAdmin"/>.
            </summary>
            <param name="next">Siguiente handler</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpDoneSysAdmin.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpEntrepreneurName">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del apellido del
            usuario cuando el registro es para una nuevo
            empresa. Procede a pedirle al usuario el nombre
            de la empresa a ingresar.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpEntrepreneurName.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpEntrepreneurName"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpEntrepreneurName.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpEntrepreneurName.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpEntrepreneurTrade">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del nombre de la
            empresa a agregar. Procede a pedirle al
            usuario introducir el oficio de la Empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpEntrepreneurTrade.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpEntrepreneurTrade"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpEntrepreneurTrade.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpEntrepreneurTrade.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpReviewCompanyNew">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del oficio de la
            empresa. Le pide al usuario revisar los datos 
            ingresados y confirmar su ingreso al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewCompanyNew.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpReviewCompanyNew"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewCompanyNew.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewCompanyNew.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpReviewEntrepreneurNew">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del oficio de la
            empresa. Le pide al usuario revisar los datos 
            ingresados y confirmar su ingreso al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewEntrepreneurNew.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpReviewEntrepreneurNew"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewEntrepreneurNew.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewEntrepreneurNew.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpReviewJoinCompany">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del oficio de la
            empresa. Le pide al usuario revisar los datos 
            ingresados y confirmar su ingreso al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewJoinCompany.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpReviewJoinCompany"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewJoinCompany.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewJoinCompany.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpReviewSysAdmin">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del apellido del
            usuario cuando el registro es para un nuevo
            administrador de la plataforma. Le pide al
            usuario revisar los datos ingresados y confirmar
            el ingreso al sistema.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewSysAdmin.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpReviewSysAdmin"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewSysAdmin.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpReviewSysAdmin.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpUserFirstName">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al la verificacion de codigo de
            invitacion por el usuario. Comienza el proceso
            de ingreso de datos pidiendo en primer lugar
            el primer nombre del usuario.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpUserFirstName.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpUserFirstName"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpUserFirstName.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpUserLastName">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde a la introduccion del primer nombre
            del usuario y continua pidiendole el apellido.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpUserLastName.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpUserLastName"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpUserLastName.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpUserLastName.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpVerifyCompanyJoin">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al ingreso de un codigo de invitacion
            para unirse a una empresa, y le pide al usuario
            verificar que esta es la accion deseada.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyCompanyJoin.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpVerifyCompanyJoin"/>.
            </summary>
            <param name="next">Siguiente handler</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyCompanyJoin.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyCompanyJoin.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpVerifyCompanyNew">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al ingreso de un codigo de invitacion
            para nueva empresa, y le pide al usuario
            verificar que esta es la accion deseada.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyCompanyNew.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpVerifyCompanyNew"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyCompanyNew.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyCompanyNew.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpVerifyEntrepreneurNew">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al ingreso de un codigo de invitacion
            para nuevo emprendedor, y le pide al usuario
            verificar que esta es la accion deseada.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyEntrepreneurNew.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpVerifyEntrepreneurNew"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyEntrepreneurNew.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifyEntrepreneurNew.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CDH_SignUpVerifySysAdminNew">
            <summary>
            <see cref="T:ClassLibrary.ChatDialogHandlerBase"/> concreto:
            Responde al ingreso de un codigo de invitacion
            para nuevo administrador de la plataforma, y
            le pide al usuario verificar que esta es la 
            accion deseada.
            </summary>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifySysAdminNew.#ctor(ClassLibrary.ChatDialogHandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CDH_SignUpVerifySysAdminNew"/>.
            </summary>
            <param name="next">Siguiente handler.</param>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifySysAdminNew.Execute(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CDH_SignUpVerifySysAdminNew.ValidateDataEntry(ClassLibrary.ChatDialogSelector)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.Currency">
            <summary>
            Enumerable que lista las monedas
            manejadas por la plataforma.
            </summary>
        </member>
        <member name="F:ClassLibrary.Currency.Undefined">
            <summary>No definido.</summary>
        </member>
        <member name="F:ClassLibrary.Currency.PesoUruguayo">
            <summary>Peso Uruguayo.</summary>
        </member>
        <member name="F:ClassLibrary.Currency.DolarEstadounidense">
            <summary>Dolar Estadounidense.</summary>
        </member>
        <member name="T:ClassLibrary.MessagingService">
            <summary>
            Enumerable que lista los distintos
            servicios de mensajeria soportados
            por el Bot.
            </summary>
        </member>
        <member name="F:ClassLibrary.MessagingService.Undefined">
            <summary>No definido.</summary>
        </member>
        <member name="F:ClassLibrary.MessagingService.Console">
            <summary>Canal de comunicacion por la consola.</summary>
        </member>
        <member name="F:ClassLibrary.MessagingService.Telegram">
            <summary>Canal de comunicacion por Telegram.</summary>
        </member>
        <member name="T:ClassLibrary.RegistrationType">
            <summary>
            Enumerable que lista los distintos tipos
            de procesos de registro para los usuarios.
            </summary>
        </member>
        <member name="F:ClassLibrary.RegistrationType.Undefined">
            <summary>No definido.</summary>
        </member>
        <member name="F:ClassLibrary.RegistrationType.EntrepreneurNew">
            <summary>Registro de un nuevo emprendedor.</summary>
        </member>
        <member name="F:ClassLibrary.RegistrationType.CopmanyNew">
            <summary>Registro de una nueva empresa.</summary>
        </member>
        <member name="F:ClassLibrary.RegistrationType.CompanyJoin">
            <summary>Registro de usuario administrador para una empresa.</summary>
        </member>
        <member name="F:ClassLibrary.RegistrationType.SystemAdminJoin">
            <summary>Registro de usuario administrador de la plataforma.</summary>
        </member>
        <member name="T:ClassLibrary.UserRole">
            <summary>
            Enumerable que lista los roles
            a los que pueden pertenecer los
            usuarios.
            </summary>
        </member>
        <member name="F:ClassLibrary.UserRole.Undefined">
            <summary>No definido.</summary>
        </member>
        <member name="F:ClassLibrary.UserRole.SystemAdministrator">
            <summary>Administrador del sistema.</summary>
        </member>
        <member name="F:ClassLibrary.UserRole.CompanyAdministrator">
            <summary>Administrador de empresa</summary>
        </member>
        <member name="F:ClassLibrary.UserRole.Entrepreneur">
            <summary>Emprendedor.</summary>
        </member>
        <member name="T:ClassLibrary.UserStatus">
            <summary>
            Enumerable que lista los estados generales
            de un usuario al conectarse a la plataforma.
            </summary>
        </member>
        <member name="F:ClassLibrary.UserStatus.Undefined">
            <summary>No definido.</summary>
        </member>
        <member name="F:ClassLibrary.UserStatus.Registered">
            <summary>Usuario registrado.</summary>
        </member>
        <member name="F:ClassLibrary.UserStatus.Unregistered">
            <summary>Usuario no registrado</summary>
        </member>
        <member name="F:ClassLibrary.UserStatus.Suspended">
            <summary>Usuario suspendido.</summary>
        </member>
        <member name="T:ClassLibrary.Location">
            <summary>
            clase location
            </summary>
        </member>
        <member name="P:ClassLibrary.Location.Georeference">
            <summary>
            valor de georeferencia
            </summary>
            <value>string de georeferencia</value>
        </member>
        <member name="M:ClassLibrary.Location.#ctor">
            <summary>
            constructor vacio de location
            </summary>
        </member>
        <member name="M:ClassLibrary.Location.#ctor(System.String)">
            <summary>
            constructor de location
            </summary>
            <param name="Georeference">georeferenciacion</param>
        </member>
        <member name="T:ClassLibrary.Singleton`1">
            <summary>
            Clase que permite reutilizar la misma instancia
            de otra clase por todo el programa.
            </summary>
            <typeparam name="T">
            Clase de la cual se precisa utilizar la misma 
            instancia.
            </typeparam>
        </member>
        <member name="P:ClassLibrary.Singleton`1.Instance">
            <summary>
            Instancia compartida de la clase <c>T</c>.
            </summary>
            <value>
            Singleton/Instancia de la clase <c>T</c>.
            </value>
        </member>
        <member name="T:ClassLibrary.CorHandler`2">
            <summary>
            Clase abstracta que forma la base para
            utilizar el patron Cadena de Responsabilidad.
            Especifica las operaciones y propiedades
            necesarias para implementar el patron.
            </summary>
            <typeparam name="T">
            Clase base de cualquier
            implementacion concreta del patron. Debe ser
            la misma clase abstracta que implementa 
            <c>CorHandler</c>.
            </typeparam>
            <typeparam name="K">
            Clase que define el selector que se utilizara
            para procesar que paso en la cadena sera el 
            que se ejecute.
            </typeparam>
        </member>
        <member name="F:ClassLibrary.CorHandler`2.next">
            <summary>
            Siguiente objeto a procesar si este
            paso no es el indicado por el selector.
            </summary>
        </member>
        <member name="F:ClassLibrary.CorHandler`2.code">
            <summary>
            Codigo identificador el paso en la cadena.
            </summary>
        </member>
        <member name="M:ClassLibrary.CorHandler`2.#ctor(`0,System.String)">
            <summary>
            Constructor base utilizado por las implementaciones
            de esta clase para asignar el <c>next</c> y <c>code</c>
            al crear instancias.
            </summary>
            <param name="next"></param>
            <param name="code"></param>
        </member>
        <member name="M:ClassLibrary.CorHandler`2.Next(`1)">
            <summary>
            Metodo a llamar desde el paso anterior para
            procesar este paso. Toda implementacion
            deberia evaluar el selector por una condicion
            y en base a esta llamar al <c>Execute()</c> de
            la misma instancia, o al <c>Next()</c> del
            siguiente paso.
            </summary>
            <param name="selector">
            Objeto con los datos para determinar que paso
            en la cadena se debe procesar, y tambien los
            necesarios para procesar el paso en si.
            </param>
            <returns>
            <c>string</c> con el resultado
            de procesar la cadena.
            </returns>
        </member>
        <member name="M:ClassLibrary.CorHandler`2.Execute(`1)">
            <summary>
            Procesa el paso actual en base a los datos
            contenidos por <c>selector</c>.
            </summary>
            <param name="selector">
            Objeto con los datos necesarios para procesar
            el paso actual.
            </param>
            <returns>
            <c>string</c> con el resultado
            de procesar el paso.
            </returns>
        </member>
        <member name="T:ClassLibrary.DataAdmin`1">
            <summary>
            Esta es una clase abstracta de la cual van
            a heredar todas las clases admin. Su funcion 
            es almacenar y manipular los elementos de tipo T.
            </summary>
        </member>
        <member name="F:ClassLibrary.DataAdmin`1.storage">
            <summary>
            Conexion con la base de datos
            </summary>
        </member>
        <member name="P:ClassLibrary.DataAdmin`1.Items">
            <summary>
            Lista de objetos de tipo T 
            </summary>
            <value>Almacenamos en la lista Item objetos de tipo T.</value>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.Insert(`0)">
            <summary>
            Inserta un registro en el 
            almacenamiento.
            </summary>
            <param name="pElemento">
            Elemento a insertar.
            </param>
            <returns>
            Id del elemento insertado.
            </returns>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.Update(`0)">
            <summary>
            Actualiza un elemento segun su id.
            </summary>
            <param name="pElemento">
            Elemento a actualizar con sus
            datos nuevos.
            </param>
            <returns>
            Confirmacion de la actualizacion.
            </returns>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.Delete(System.Int32)">
            <summary>
            Elimina un elemento segun el id
            recibido.
            </summary>
            <param name="pId">
            Id del elemento a eliminar.
            </param>
            <returns>
            Confirmacion de la eliminacion.
            </returns>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.GetById(System.Int32)">
            <summary>
            Obtener un registro por su id.
            </summary>
            <param name="pId">
            Id del registro a obtener.
            </param>
            <returns>
            Registro obtenido o nulo
            en caso de no existir.
            </returns>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.New">
            <summary>
            Crear un objeto nuevo del tipo
            asociado al DataAdmin
            </summary>
            <returns>
            Objeto creado.
            </returns>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.GetItemPage(System.Collections.Generic.List{`0},System.Int32,System.Int32)">
            <summary>
            Toma una lista de items T, la
            separa en paginas de cierta 
            cantidad de items, y recupera
            una pagina concreta de estas.
            </summary>
            <param name="items">
            Listado de items a reducir.
            </param>
            <param name="itemCount">
            Cantidad de items por pagina.
            </param>
            <param name="page">
            Pagina la cual retornar.
            </param>
            <returns>
            Listado de items pertenecientes
            a la pagina con el indice provisto
            al dividir la lista original
            en la grupos de la cantidad de
            items especificada.
            </returns>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.Exists(System.Int32)">
            <summary>
            Prueba si un registro existe en
            el almacenamiento persistente.
            </summary>
            <param name="id">
            Id del registro a encontrar
            </param>
            <returns>
            Valor booleano indicando la
            existencia del registro.
            </returns>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.ValidateInsert(`0)">
            <summary>
            Valida los datos a introducir al storage
            en un insert
            </summary>
            <param name="item">
            Item a validar.
            </param>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.ValidateUpdate(`0)">
            <summary>
            Valida los datos a introducir al storage
            en un update
            </summary>
            <param name="item">
            Item a validar.
            </param>
        </member>
        <member name="M:ClassLibrary.DataAdmin`1.ValidateData(`0)">
            <summary>
            Valida los datos especificos
            del data a manipular.
            </summary>
            <param name="item">
            Item a validar.
            </param>
        </member>
        <member name="T:ClassLibrary.IManagableData`1">
            <summary>
            Interface para estructuras de datos que
            deben ser administradas por una implementacion
            concreta de <see cref="T:ClassLibrary.DataAdmin`1"/>. 
            </summary>
        </member>
        <member name="P:ClassLibrary.IManagableData`1.Id">
            <summary>
            Identificador del registro de la estructura.
            </summary>
        </member>
        <member name="P:ClassLibrary.IManagableData`1.Deleted">
            <summary>
            Flag de la baja logica del registro.
            </summary>
        </member>
        <member name="M:ClassLibrary.IManagableData`1.LoadFromJson(System.String)">
            <summary>
            Cargar las propiedades del objeto desde un Json.
            </summary>
            <param name="json">Cadena json con los datos del objeto.</param>
        </member>
        <member name="M:ClassLibrary.IManagableData`1.ConvertToJson">
            <summary>
            Convierte el objeto a json.
            </summary>
            <returns>Cadena Json con los datos del objeto.</returns>
        </member>
        <member name="M:ClassLibrary.IManagableData`1.Clone">
            <summary>
            Devuelve un nuevo objeto equivalente pero no identico
            al cual se le envia el mensaje.
            </summary>
            <returns>Copia por miembro de un objeto.</returns>
        </member>
        <member name="T:ClassLibrary.IStorageProvider">
            <summary>
            Interface para implementar proveedores de almacenamiento
            de datos.
            </summary>
        </member>
        <member name="M:ClassLibrary.IStorageProvider.SelectAll``1">
            <summary>
            Interface para implementar proveedores de almacenamiento
            de datos.
            </summary>
        </member>
        <member name="M:ClassLibrary.IStorageProvider.Insert``1(``0)">
            <summary>
            Inserta un registro en el 
            alacenamiento.
            </summary>
            <typeparam name="T">
            Clase de datos del registro.
            Asociado a la tabla en si.
            </typeparam>
        </member>
        <member name="M:ClassLibrary.IStorageProvider.Update``1(``0)">
            <summary>
            Modifica un registro segun su id.
            </summary>
            <typeparam name="T">
            Clase de datos del registro.
            Asociado a la tabla en si.
            </typeparam>
        </member>
        <member name="M:ClassLibrary.IStorageProvider.Delete``1(System.Int32)">
            <summary>
            Elimina un registro por su id.
            </summary>
            <typeparam name="T">
            Clase de datos del registro.
            Asociado a la tabla en si.
            </typeparam>
        </member>
        <member name="T:ClassLibrary.SearchData">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClassLibrary.SearchPage`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ClassLibrary.SearchPage`1.SearchResults">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClassLibrary.SearchPage`1.CurrentPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClassLibrary.SearchPage`1.PageItemCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClassLibrary.SearchPage`1.PageItems">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClassLibrary.CompanyUser">
            <summary>
            Registro de asociacion entre
            compania y usuario que la 
            administra.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyUser.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CompanyUser"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyUser.Id">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyUser.Deleted">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyUser.CompanyId">
            <summary>
            Id de la compania a la 
            cual pertenece el usuario.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyUser.AdminUserId">
            <summary>
            Identificador del
            usuario.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyUser.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyUser.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyUser.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyUserAdmin">
            <summary>
            Clase administradora de
            asociaciones entre companias
            y usuarios.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyUserAdmin.GetAdminUserForCompany(System.Int32)">
            <summary>
            Lista todos los usuarios
            administradores de una
            compania.
            </summary>
            <param name="companyId">
            Id de la compania por la
            cual buscar usuarios.
            </param>
            <returns>
            Listado de ids de usuarios.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyUserAdmin.GetCompanyForUser(System.Int32)">
            <summary>
            Encuentra la compania que es
            administrada por el usuario
            con el id provisto.
            </summary>
            <param name="userId">
            Id del usuario para el cual
            buscar su compania.
            </param>
            <returns>
            Id de la compania encontrada.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyUserAdmin.ValidateData(ClassLibrary.CompanyUser)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.Company">
            <summary>
            esta clase representa a la compania
            </summary>
        </member>
        <member name="P:ClassLibrary.Company.Name">
            <summary>
            nombre de la compania
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Company.Trade">
            <summary>
            trade de la compania 
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Company.Id">
            <summary>
            identificador de la compania para ser identificado adentro del programa
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Company.Deleted">
            <summary>
            para saber si una compania esta eliminada 
            </summary>
            <value></value>
        </member>
        <member name="M:ClassLibrary.Company.#ctor(System.Int32,System.String,System.String)">
            <summary>
            constructor de la clase Company
            </summary>
            <param name="name"> nombre de la company</param>
            <param name="id">id de la company</param>
             <param name="trade">trade de la company</param>
        </member>
        <member name="M:ClassLibrary.Company.#ctor">
            <summary>
            constructor vacio de company
            </summary>
        </member>
        <member name="M:ClassLibrary.Company.LoadFromJson(System.String)">
            <summary>
            
            </summary>
            <param name="json"></param>
        </member>
        <member name="M:ClassLibrary.Company.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.Company.ConvertToJson">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ClassLibrary.CompanyAdmin">
            <summary>
            clase administradora de company
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyAdmin.GetByName(System.String)">
            <summary>
            Obtiene una compania por
            su nombre.
            </summary>
            <param name="name">
            Nombre por el cual buscar.
            </param>
            <returns>
            Compania encontrada.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyAdmin.ValidateData(ClassLibrary.Company)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyMaterial">
            <summary>
            Esta clase representa material empresa.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyMaterial.Id">
            <summary>
            Identificador de cada materialEmpresa
            </summary>
            <value>Almacenamos un numero el cual va a identificar cada materialEmpresa. Este numero se saca de la lista de materialesEmpresa</value>
        </member>
        <member name="P:ClassLibrary.CompanyMaterial.Name">
            <summary>
            Nombre del materialEmpresa
            </summary>
            <value>Almacenamos el nombre del materialEmpresa en un string</value>
        </member>
        <member name="P:ClassLibrary.CompanyMaterial.LastRestock">
             <summary>
            Ultimo re-stock
             </summary>
             <value>Almacenamos la ultima fecha que se hizo un re-stock del materialEmpresa</value>
        </member>
        <member name="P:ClassLibrary.CompanyMaterial.DateBetweenRestocks">
             <summary>
            Dias entre re-stock de cada materialEmpresa
             </summary>
             <value>Almacenamos el numero de dias que demora el re-stock del materialEmpresa. Esto nos sirve para poder decirle al emprendedor cada cuanto se genera este materialEmpresa</value>
        </member>
        <member name="P:ClassLibrary.CompanyMaterial.Deleted">
            <summary>
            Obtiene un valor que indica si el materiaEmpresa fue eliminado
            </summary>
            <value><c>true</c> si el materialEmpresa fue eliminado, <c>false</c> en caso contrario.</value>
        </member>
        <member name="P:ClassLibrary.CompanyMaterial.MaterialCategoryId">
             <summary>
            La categoria donde se guarda el materialEmpresa
             </summary>
             <value>Almacenamos en que categoria esta situado el materialEmpresa</value>
        </member>
        <member name="P:ClassLibrary.CompanyMaterial.CompanyId">
            <summary>
            Id de la empresa a la cual pertenece el material de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterial.#ctor(System.Int32,System.String,System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor de la clase con parametros.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterial.#ctor">
            <summary>
            Constructor de la clase vacio.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterial.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyMaterial.Clone">
            <inheritdoc/>    
        </member>
        <member name="M:ClassLibrary.CompanyMaterial.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyMaterialAdmin">
            <summary>
            Esta clase representa la administracion de Usuarios.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialAdmin.GetCompanyMaterialsInCompany(System.Int32)">
            <summary>
            Obtiene un listado de materiales de
            empresa filtrados por su empresa.
            </summary>
            <param name="companyId">
            Id de la empresa por la cual
            filtrar la lista.
            </param>
            <returns>
            Listado de Ids de materiales
            de empresa pertenecientes a
            la empresa dada.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialAdmin.GetCompanyMaterialsInCompany(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene un listado de materiales de
            empresa filtrados por su empresa.
            </summary>
            <param name="companyId">
            Id de la empresa por la cual
            filtrar la lista.
            </param>
            <param name="itemCount">
            Cantidad de items por hoja.
            </param>
            <param name="page">
            Hoja la cual recuperar.
            </param>
            <returns>
            Listado de Ids de materiales
            de empresa pertenecientes a
            la empresa dada.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialAdmin.GetCompanyMaterialsInCompanyForCategory(System.Int32,System.Int32)">
            <summary>
            Obtiene un listado de materiales
            de compania filtrado por una dada
            categoria de materiales.
            </summary>
            <param name="companyId">
            Id de la compania dentro de la
            cual se buscaran los materiales.
            </param>
            <param name="materialCatId">
            Id de la categoria por la cual
            filtrar los materiales.
            </param>
            <returns>
            Listado de Ids de todos los materiales
            de la empresa que pertenecen a la
            categoria dada.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialAdmin.GetCompanyMaterialsInCompanyForCategory(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene un listado de materiales
            de compania filtrado por una dada
            categoria de materiales.
            </summary>
            <param name="companyId">
            Id de la compania dentro de la
            cual se buscaran los materiales.
            </param>
            <param name="materialCatId">
            Id de la categoria por la cual
            filtrar los materiales.
            </param>
            <param name="itemCount">
            Cantidad de items por hoja.
            </param>
            <param name="page">
            Hoja la cual recuperar.
            </param>
            <returns>
            Listado de Ids de todos los materiales
            de la empresa que pertenecen a la
            categoria dada.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialAdmin.GetCompanyMaterialsForCategory(System.Int32)">
            <summary>
            Obtiene un listado de materiales
            de empresas filtrado por su 
            categoria de materiales.
            </summary>
            <param name="materialCatId">
            Id de la categoria de materiales
            por la cual filtrar.
            </param>
            <returns>
            Listado de Ids de todos los
            materiales de empresas que
            cumplen con el filtro de
            categoria.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialAdmin.GetCompanyMaterialsForCategory(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene un listado de materiales
            de empresas filtrado por su 
            categoria de materiales.
            </summary>
            <param name="materialCatId">
            Id de la categoria de materiales
            por la cual filtrar.
            </param>
            <param name="itemCount">
            Cantidad de items por hoja.
            </param>
            <param name="page">
            Hoja la cual recuperar.
            </param>
            <returns>
            Listado de Ids de todos los
            materiales de empresas que
            cumplen con el filtro de
            categoria.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialAdmin.ValidateData(ClassLibrary.CompanyMaterial)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyMaterialQualification">
            <summary>
            Contenedor de asociacion entre un material de empresa y sus
            habilitaciones requeridas.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualification.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CompanyMaterialQualification"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialQualification.Id">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialQualification.Deleted">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialQualification.CompanyMatId">
            <summary>
            Id del material de la compania.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialQualification.QualificationId">
            <summary>
            Habilitacion asociada al material de la compania.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualification.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualification.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualification.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyMaterialQualificationAdmin">
            <summary>
            Clase administradora de habilitaciones para un material de empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualificationAdmin.GetQualificationsForCompanyMaterial(System.Int32)">
            <summary>
            Obtiene la lista de habilitaciones para un material de empresa por su id.
            </summary>
            <param name="companyMaterialId">
            Id del material de empresa por el cual buscar habilitaciones. </param>
            <returns>
            Listado de Ids para cada habilitacion asociada al material de empresa.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualificationAdmin.GetQualificationsForCompanyMaterial(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene la lista de habilitaciones para un material de empresa por su id.
            </summary>
            <param name="companyMaterialId">
            Id del material de empresa por el cual buscar habilitaciones.
            </param>
            <param name="itemCount">Cantidad de items por hoja.</param>
            <param name="page">Hoja la cual recuperar.</param>
            <returns>
            Listado de Ids para cada habilitacion asociada al material de empresa.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualificationAdmin.GetCompanyMaterialHasQualification(System.Int32,System.Int32)">
            <summary>
            Verifica si un material de empresa requiere una habilitacion concreta o no.
            </summary>
            <param name="companyMatId">Id del material de empresa por el cual buscar.</param>
            <param name="qualificationId"> Habilitacion la cual se busca verificar. </param>
            <returns>
            Valor booleano referenciando si el material de empresa requiere
            la habilitacion o no.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialQualificationAdmin.ValidateData(ClassLibrary.CompanyMaterialQualification)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyMaterialStock">
            <summary>
            Registro de Stock por
            material de empresa
            asociado a una localizacion
            de la empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStock.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CompanyMaterialStock"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialStock.Id">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialStock.Deleted">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialStock.CompanyMatId">
            <summary>
            Id del material de compania
            al cual se le va a indicar
            el stock
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialStock.CompanyLocationId">
            <summary>
            Localizacion sobre la cual
            se indicara el stock del
            material de empresa.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyMaterialStock.Stock">
            <summary>
            Cantidad de existencias del
            material en su dada unidad
            dentro del lugar especificado.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStock.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStock.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStock.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyMaterialStockAdmin">
            <summary>
            Administrador de datos asociado
            al stock por localizacion de cada
            material de las empresas.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStockAdmin.GetStockTotalForCompanyMaterial(System.Int32)">
            <summary>
            Obtiene el stock total
            de un material de empresa.
            </summary>
            <param name="companyMaterialId">
            Id del material de empresa
            al cual se le quiere obtener
            el stock.
            </param>
            <returns>
            Stock total del material.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStockAdmin.GetLocationsWithStockForCompanyMaterial(System.Int32)">
            <summary>
            Obtiene una lista de las
            localizaciones de la empresa
            donde hay stock del material.
            </summary>
            <param name="companyMaterialId">
            Id del material por el cual
            se quiere buscar localizaciones.
            </param>
            <returns>
            Listado de Ids de localizaciones
            de la empresa con stock del material.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStockAdmin.GetLocationsWithStockForCompanyMaterial(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene una lista de las
            localizaciones de la empresa
            donde hay stock del material.
            </summary>
            <param name="companyMaterialId">
            Id del material por el cual
            se quiere buscar localizaciones.
            </param>
            <param name="itemCount">
            Cantidad de items por hoja.
            </param>
            <param name="page">
            Hoja la cual recuperar.
            </param>
            <returns>
            Listado de Ids de localizaciones
            de la empresa con stock del material.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStockAdmin.GetCompanyMaterialsInStockForLocation(System.Int32)">
            <summary>
            Obtiene un listado de materiales
            de empresa con stock para una
            localizacion concreta de la 
            empresa.
            </summary>
            <param name="companyLocationId">
            Id de la localizacion de la empresa.
            </param>
            <returns>
            Listado de Ids para cada material
            de empresa con stock en la
            localizacion.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStockAdmin.GetCompanyMaterialsInStockForLocation(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene un listado de materiales
            de empresa con stock para una
            localizacion concreta de la 
            empresa.
            </summary>
            <param name="companyLocationId">
            Id de la localizacion de la empresa.
            </param>
            <param name="itemCount">
            Cantidad de items por hoja.
            </param>
            <param name="page">
            Hoja la cual recuperar.
            </param>
            <returns>
            Listado de Ids para cada material
            de empresa con stock en la
            localizacion.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStockAdmin.GetClosestLocationWithMaterialStock(System.Int32,System.String)">
            <summary>
            Obtiene el id la localizacion de
            la empresa donde todavia hay stock
            de un cierto material dado.
            </summary>
            <param name="compMatId">
            Material de la empresa para el cual
            se busca conseguir la localizacion
            con stock mas cercana.
            </param>
            <param name="geoReference">
            Geo referencia contra la cual comparar
            las localizaciones con stock del
            material dado.
            </param>
            <returns>
            Id de la localizacion con stock
            del material de la empresa mas
            cercana a la geo referencia
            provista.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyMaterialStockAdmin.ValidateData(ClassLibrary.CompanyMaterialStock)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.PublicationKeyWord">
            <summary>
            Registro de asociaciÃ³n de palabras claves y publicaciÃ³n.
            </summary>
        </member>
        <member name="M:ClassLibrary.PublicationKeyWord.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.PublicationKeyWord"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.PublicationKeyWord.Id">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.PublicationKeyWord.Deleted">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.PublicationKeyWord.PublicationId">
            <summary>
            Id de la publicacion a la
            que pertenece la key word.
            </summary>
        </member>
        <member name="P:ClassLibrary.PublicationKeyWord.KeyWord">
            <summary>
            Key word asociada a la 
            publicacion.
            </summary>
        </member>
        <member name="M:ClassLibrary.PublicationKeyWord.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.PublicationKeyWord.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.PublicationKeyWord.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.PublicationKeyWordAdmin">
            <summary>
            Administrador de registros de
            palabras clave asociadas a las
            publicaciones.
            </summary>
        </member>
        <member name="M:ClassLibrary.PublicationKeyWordAdmin.PublicationMatchesKeyWord(System.Int32,System.String)">
            <summary>
            Verifica si una publicaciÃ³n tiene una palabra concreta entre sus palabras claves.
            </summary>
            <param name="pubId">Id de la publicaciÃ³n relevante</param>
            <param name="keyWord">Palabra a verificar.</param>
            <returns>Valor booleano indicacndo si la palabra existe en la lista de palabras clave o no.</returns>
        </member>
        <member name="M:ClassLibrary.PublicationKeyWordAdmin.GetKeyWordsForPublication(System.Int32)">
            <summary>
            Obtiene una lista de palabras que actuan como palabra clave para una publicaciÃ³n concreta.
            </summary>
            <param name="pubId">Id de la publicaciÃ³n para la cual se busca obtener sus palabras claves.</param>
            <returns>Listado de strings con las palabras claves obtenidas.</returns>
        </member>
        <member name="M:ClassLibrary.PublicationKeyWordAdmin.ValidateData(ClassLibrary.PublicationKeyWord)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.Publication">
            <summary>
            Clase creada para crear una publicaciÃ³n y publicar los materiales para vender.
            </summary>
        </member>
        <member name="P:ClassLibrary.Publication.CompanyId">
            <summary>
            Publication tiene una property de Company.
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Publication.CompanyMaterialId">
            <summary>
            Id del material de empresa publicado.
            </summary>
        </member>
        <member name="P:ClassLibrary.Publication.Id">
            <summary>
            Id que se la da a cada publicaciÃ³n.
            </summary>
        </member>
        <member name="P:ClassLibrary.Publication.ActiveFrom">
            <summary>
            DateTime con la fecha de activaciÃ³n.
            </summary>
        </member>
        <member name="P:ClassLibrary.Publication.ActiveUntil">
            <summary>
            Datetime con la fecha de desactivaciÃ³n de la publicaciÃ³n.
            </summary>
        </member>
        <member name="P:ClassLibrary.Publication.Price">
            <summary>
            Precio de lo que se vende en la publicaciÃ³n, ya sea un material o varios.
            </summary>
        </member>
        <member name="P:ClassLibrary.Publication.Quantity">
            <summary>
            Cantidad del material.
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Publication.Currency">
            <summary>
            Divisa del precio del material o materiales.
            </summary>
        </member>
        <member name="P:ClassLibrary.Publication.Deleted">
            <summary>
             Deleted sirve para saber si la publicaciÃ³n se borra o no.
            </summary>
        </member>
        <member name="M:ClassLibrary.Publication.#ctor">
            <summary>
            Constructor vacio para PublicationAdmin.
            </summary>
        </member>
        <member name="M:ClassLibrary.Publication.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Publication.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Publication.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.PublicationAdmin">
            <summary>
            Clase para administrar las publicaciones
            </summary>
        </member>
        <member name="M:ClassLibrary.PublicationAdmin.GetPublicationsByCompany(System.Int32)">
            <summary>
            Obtiene una lista de publicaciones filtrada por la empresa que las realizÃ³.
            </summary>
            <param name="companyId">Id de la empresa por la cual se busca filtrar la lista.</param>
            <returns>Listado de Ids de todas las publicaciones pertenecientes a la empresa.</returns>
        </member>
        <member name="M:ClassLibrary.PublicationAdmin.GetPublicationsByCompany(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene una lista de publicaciones filtrada por la empresa que las realizÃ³.
            </summary>
            <param name="companyId">Id de la empresa por la cual se busca filtrar la lista.</param>
            <param name="itemCount">Cantidad de items por hoja.</param>
            <param name="page">Hoja la cual recuperar.</param>
            <returns>Listado de Ids de todas las publicaciones pertenecientes a la empresa.</returns>
        </member>
        <member name="M:ClassLibrary.PublicationAdmin.GetPublicationsWithCompanyMaterial(System.Int32)">
            <summary>
            Obtiene una lista de publicaciones filtrada por el material de empresa.
            </summary>
            <param name="compMatId">Id del material de empresa.</param>
            <returns>Listado de Ids de todas las publicaciones encontradas.</returns>
        </member>
        <member name="M:ClassLibrary.PublicationAdmin.ValidateData(ClassLibrary.Publication)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.DataManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.User">
            <summary>
            Administracion de usuarios.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.Account">
            <summary>
            Administracion de cuentas.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.Sale">
            <summary>
            Administracion de ventas.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.Qualification">
            <summary>
            Administracion de habilitaciones.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.MaterialCategory">
            <summary>
            Administracion de categorias de materiales.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.CompanyLocation">
            <summary>
            Administracion de localizaciones de empresa.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.Invitation">
            <summary>
            Administracion de Invitaciones.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.Entrepreneur">
            <summary>
            Administracion de emprendedores.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.Company">
            <summary>
            Administracion de empresas.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.Publication">
            <summary>
            Administracion de publicaciones.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.PublicationKeyWord">
            <summary>
            Administracion de palabras clave de publicaciones.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.CompanyMaterial">
            <summary>
            Administracion de materiales de empresas.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.CompanyMaterialStock">
            <summary>
            Administracion de stock de materiales de empresas.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.CompanyMaterialQualification">
            <summary>
            Administracion de habilitaciones para materiales de empresas.
            </summary>
        </member>
        <member name="P:ClassLibrary.DataManager.CompanyUser">
            <summary>
            Administracion de administradores de empresa.
            </summary>
        </member>
        <member name="T:ClassLibrary.Entrepreneur">
            <summary>
            clase que representa los emprendedores
            </summary>
        </member>
        <member name="M:ClassLibrary.Entrepreneur.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            constructor de emprendedor
            </summary>
            <param name="name">nombre del emprendedor</param>
            <param name="userId">id de usuario del emprendedor</param>
            <param name="id">id del emprendedor</param>
            <param name="trade">en que se especializa el emprendedor</param>
        </member>
        <member name="M:ClassLibrary.Entrepreneur.#ctor">
            <summary>
            constructor vacio de emprendedor
            </summary>
        </member>
        <member name="P:ClassLibrary.Entrepreneur.GeoReference">
            <summary>
            Geo referencia de localizacion del
            emprendedor
            </summary>
        </member>
        <member name="P:ClassLibrary.Entrepreneur.UserId">
            <summary>
            usuario del emprendedor
            </summary>
            <value>Almacenamos el usuario en un objeto tipo user</value>
        </member>
        <member name="P:ClassLibrary.Entrepreneur.Name">
            <summary>
            nombre del emprendedor
            </summary>
            <value>almacenamos el nombre en un string</value>
        </member>
        <member name="P:ClassLibrary.Entrepreneur.Trade">
            <summary>
            oficio del emprendedor
            </summary>
            <value>almacenamos el oficio en un String</value>
        </member>
        <member name="P:ClassLibrary.Entrepreneur.Id">
            <summary>
            id del emprendedor
            </summary>
            <value>almacenamos el id en un int</value>
        </member>
        <member name="P:ClassLibrary.Entrepreneur.Deleted">
            <summary>
            verificar si esta activo o no
            </summary>
            <value>si la compania fue eliminada<c>true</c>
             en caso contrario <c>false</c> </value>
        </member>
        <member name="M:ClassLibrary.Entrepreneur.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Entrepreneur.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Entrepreneur.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.EntrepreneurAdmin">
            <summary>
            Esta clase representa la administracion de Entrepreneur.
            </summary>
        </member>
        <member name="M:ClassLibrary.EntrepreneurAdmin.GetByUser(System.Int32)">
            <summary>
            encontramos un emprendedor por id de user 
            </summary>
            <param name="id">id de user</param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.EntrepreneurAdmin.GetByName(System.String)">
            <summary>
            encontramos un emprendedor por nombre 
            </summary>
            <param name="name">nombre del emprendedor</param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.EntrepreneurAdmin.ValidateData(ClassLibrary.Entrepreneur)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.Invitation">
            <summary>
            Clase encargada para conocer los datos de la invitacion
            </summary>
        </member>
        <member name="P:ClassLibrary.Invitation.Id">
            <summary>
            Identificador de cada Invitacion
            </summary>
        </member>
        <member name="P:ClassLibrary.Invitation.Code">
            <summary>
            Codigo de la invitacion
            </summary>
            <value>Almacenamos el codigo de la invitacion en un string</value>
        </member>
        <member name="P:ClassLibrary.Invitation.Type">
            <summary>
            Tipo de la invitacion
            </summary>
            <value>Almacenamos que tipo de invitacion es. Si es una invitaciÃ³n a una empresa ya existente o a una empresa nueva o a un emprendedor o a un admin del sistema</value>
        </member>
        <member name="P:ClassLibrary.Invitation.ValidAfter">
            <summary>
            Fecha desde cuando es valida la invitacion
            </summary>
        </member>
        <member name="P:ClassLibrary.Invitation.ValidBefore">
            <summary>
            Fecha hasta cuando es valida la invitacion
            </summary>
        </member>
        <member name="P:ClassLibrary.Invitation.CompanyId">
            <summary>
            Id de la company a unirse
            </summary>
            <value>En caso de unirnos a una company, nos unimos segun su id. En caso de no unirse a ninguna empresa, se alamacena 0</value>
        </member>
        <member name="P:ClassLibrary.Invitation.Used">
            <summary>
            Si la invitacion esta utilizada
            </summary>
            <value>En caso de que la invitacion haya sido utilizada entonces used=true. En caso contrario used=false</value>
        </member>
        <member name="P:ClassLibrary.Invitation.Deleted">
            <summary>
            Si la invitacion esta eliminada
            </summary>
            <value>En caso de que la invitacion haya sido eliminada entonces deleted=true. En caso contrario deleted=false</value>
        </member>
        <member name="M:ClassLibrary.Invitation.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.Invitation"/>.
            </summary>
        </member>
        <member name="M:ClassLibrary.Invitation.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Invitation.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Invitation.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.InvitationAdmin">
            <summary>
            Esta clase representa la administracion de Invitaciones.
            </summary>
        </member>
        <member name="M:ClassLibrary.InvitationAdmin.GetByCode(System.String)">
            <summary>
            Obtener la invitacion a 
            partir de su codigo.
            </summary>
            <param name="pCode">
            Codigo de la invitacion.
            </param>
            <returns></returns>
        </member>
        <member name="M:ClassLibrary.InvitationAdmin.GetInvitationIsOfType(System.String,ClassLibrary.RegistrationType)">
            <summary>
            Verifica si una invitacion
            pertenece al tipo sugerido.
            </summary>
            <param name="code">
            Codigo de la invitacion a
            verificar.
            </param>
            <param name="type">
            Tipo de invitacion contra
            el cual comparar.
            </param>
            <returns>
            Valor booleano representado
            si la invitacion pertenece
            al tipo.
            </returns>
        </member>
        <member name="M:ClassLibrary.InvitationAdmin.GenerateNewInviteCode(System.Int32)">
            <summary>
            Actualizar una invitacion con un
            nuevo codigo de invitacion generado
            dinamicamente a partir de la fecha
            actual y el Id.
            </summary>
            <param name="inviteId">
            Id de la invitacion para la cual se
            busca generar un nuevo codigo.
            </param>
        </member>
        <member name="M:ClassLibrary.InvitationAdmin.ValidateInsert(ClassLibrary.Invitation)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.InvitationAdmin.ValidateData(ClassLibrary.Invitation)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyLocation">
            <summary>
            Registro que contiene una asociacion
            entre empresea y localizacion por
            geo referencia.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyLocation.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.CompanyLocation"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyLocation.Id">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyLocation.Deleted">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.CompanyLocation.CompanyId">
            <summary>
            Identificador de la
            compania asociada a
            la localizacion.
            </summary>
        </member>
        <member name="P:ClassLibrary.CompanyLocation.GeoReference">
            <summary>
            Geo referencia de la
            localizacion.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyLocation.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyLocation.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.CompanyLocation.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.CompanyLocationAdmin">
            <summary>
            Clase administradora de las
            localizaciones de una empresa.
            </summary>
        </member>
        <member name="M:ClassLibrary.CompanyLocationAdmin.GetLocationsForCompany(System.Int32)">
            <summary>
            Obtiene una lista de localizaciones
            pertenecientes a una empresa.
            </summary>
            <param name="companyId">
            Id de la empresa por la cual
            buscar localizaciones.
            </param>
            <returns>
            Lista de localizaciones
            pertenecientes a la empresa
            por la cual se busco.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyLocationAdmin.GetClosestCompanyLocationToGeoReference(System.Int32,System.String)">
            <summary>
            Obtiene un <see cref="T:ClassLibrary.CompanyLocation"/> con
            la localizacion de la empresa mas
            cercana a la geo referencia dada.
            </summary>
            <param name="companyId">
            Id de la compania para la cual se
            desea buscar la localizacion mas
            cercana.
            </param>
            <param name="geoRef">
            Geo referencia contra cual se quiere
            comparar la distancia a las localizaciones
            de la empresa
            </param>
            <returns>
            <see cref="T:ClassLibrary.CompanyLocation"/> con los datos
            de la localizacion mas cercana.
            </returns>
        </member>
        <member name="M:ClassLibrary.CompanyLocationAdmin.ValidateData(ClassLibrary.CompanyLocation)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.MaterialCategory">
            <summary>
            Esta clase representa las categorias de los materialesEmpresa.
            </summary>
        </member>
        <member name="P:ClassLibrary.MaterialCategory.Id">
            <summary>
            Identificador de cada Categoria de Material 
            </summary>
            <value>Almacenamos un numero el cual va a identificar cada Categoria de Material.</value>
        </member>
        <member name="P:ClassLibrary.MaterialCategory.Name">
            <summary>
            Nombre de cada Categoria de Material 
            </summary>
            <value>Almacenamos un nombre de cada Categoria de Material.</value>
        </member>
        <member name="P:ClassLibrary.MaterialCategory.Deleted">
            <summary>
            Obtiene un valor que indica si el MaterialCategory fue eliminado
            </summary>
            <value><c>true</c> si el MaterialCategory fue eliminado, <c>false</c> en caso contrario.</value>
        </member>
        <member name="M:ClassLibrary.MaterialCategory.#ctor(System.Int32,System.String)">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:ClassLibrary.MaterialCategory.#ctor">
            <summary>
            Constructor de la clase vacio
            </summary>
        </member>
        <member name="M:ClassLibrary.MaterialCategory.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.MaterialCategory.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.MaterialCategory.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.MaterialCategoryAdmin">
            <summary>
            Esta clase representa la administracion de Usuarios.
            </summary>
        </member>
        <member name="M:ClassLibrary.MaterialCategoryAdmin.ValidateData(ClassLibrary.MaterialCategory)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.Qualification">
            <summary>
            Clase para definir habilitaciones.
            </summary>
        </member>
        <member name="P:ClassLibrary.Qualification.Id">
            <summary>
            Id de habilitaciones.
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Qualification.Name">
            <summary>
            Nombre de la habilitacion.
            </summary>
            <value></value>
        </member>
        <member name="P:ClassLibrary.Qualification.Deleted">
            <summary>
            Habilita la habilitaciÃ³n.
            </summary>
            <value></value>
        </member>
        <member name="M:ClassLibrary.Qualification.#ctor(System.String)">
            <summary>
            Constructor de Qualification.
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:ClassLibrary.Qualification.#ctor">
            <summary>
            Constructor para la utilizaciÃ³n de Qualification Admin
            </summary>
        </member>
        <member name="M:ClassLibrary.Qualification.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Qualification.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Qualification.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.QualificationAdmin">
            <summary>
            Clase para la administraciÃ³n de las habilitaciones.
            </summary>
        </member>
        <member name="M:ClassLibrary.QualificationAdmin.ValidateData(ClassLibrary.Qualification)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.Sale">
            <summary>
            Clase Sale.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.ProductCompanyMaterialId">
            <summary>
            Material de empresa comprado.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.ProductQuantity">
            <summary>
            Cantidad del material comprado.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.SellerCompanyId">
            <summary>
            Property de Company.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.BuyerEntrepreneurId">
            <summary>
            Property de Entrepreneur.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.Id">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.Sale.DateTime">
            <summary>
            Fecha de la venta.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.Price">
            <summary>
            Precio de la venta.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.Currency">
            <summary>
            Divisa en la que se realiza cada venta.
            </summary>
        </member>
        <member name="P:ClassLibrary.Sale.Deleted">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Sale.#ctor(System.DateTime,System.Int32,ClassLibrary.Currency)">
            <summary>
            Constructor de la clase Sale para definir los atributos.
            </summary>
            <param name="DateTime"></param>
            <param name="Price"></param>
            <param name="Currency"></param>
        </member>
        <member name="M:ClassLibrary.Sale.#ctor">
            <summary>
            Constructor vacio para la clase SaleAdmin.
            </summary>
        </member>
        <member name="M:ClassLibrary.Sale.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Sale.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Sale.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.SaleAdmin">
            <summary>
            Clase para administrar las ventas.
            </summary>
        </member>
        <member name="M:ClassLibrary.SaleAdmin.GetSalesBySeller(System.Int32)">
            <summary>
            Obtiene un listado de ventas para una compania concreta.
            </summary>
            <param name="companyId">
            Id de la compania para la cual se le quieren encontrar todas las ventas.
            </param>
            <returns>
            Listado de Ids de ventas realizadas por la compania.
            </returns>
        </member>
        <member name="M:ClassLibrary.SaleAdmin.GetSalesBySeller(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene un listado de ventas para una compania concreta.
            </summary>
            <param name="companyId">
            Id de la compania para la cual se le quieren encontrar todas las ventas.
            </param>
            <param name="itemCount">Cantidad de items por hoja.</param>
            <param name="page">Hoja la cual recuperar.</param>
            <returns>
            Listado de Ids de ventas realizadas por la compania.
            </returns>
        </member>
        <member name="M:ClassLibrary.SaleAdmin.GetSalesByBuyer(System.Int32)">
            <summary>
            Obtiene un listado de compras realizadas por un emprendedor
            </summary>
            <param name="entrepreneurId">
            Id del emprendedor para el cual se le quieren buscar las compras.
            </param>
            <returns>
            Listado de Ids de compras realizadas por el emprendedor.
            </returns>
        </member>
        <member name="M:ClassLibrary.SaleAdmin.GetSalesByBuyer(System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene un listado de compras realizadas por un emprendedor
            </summary>
            <param name="entrepreneurId">
            Id del emprendedor para el cual se le quieren buscar las compras.
            </param>
            <param name="itemCount">Cantidad de items por hoja.</param>
            <param name="page">Hoja la cual recuperar.</param>
            <returns>
            Listado de Ids de compras realizadas por el emprendedor.
            </returns>
        </member>
        <member name="M:ClassLibrary.SaleAdmin.ValidateData(ClassLibrary.Sale)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.Account">
            <summary>
            la clase account maneja las cuentas de lso usuarios
            </summary>
        </member>
        <member name="M:ClassLibrary.Account.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.Account"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.Account.Id">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.Account.Deleted">
            <inheritdoc/>
        </member>
        <member name="P:ClassLibrary.Account.UserId">
            <summary>
            Id del usuario asociado
            a la cuenta
            </summary>
        </member>
        <member name="P:ClassLibrary.Account.Service">
            <summary>
            Servicio de mensajeria
            asociado a la cuenta.
            </summary>
        </member>
        <member name="P:ClassLibrary.Account.CodeInService">
            <summary>
            Identificador de la
            cuenta en el servicio
            de mensajeria asociado
            </summary>
        </member>
        <member name="M:ClassLibrary.Account.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Account.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.Account.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.AccountAdmin">
            <summary>
            Administrador de datos persistentes para
            el tipo de datos administrable de cuentas
            <see cref="T:ClassLibrary.Account" />.
            </summary>
        </member>
        <member name="M:ClassLibrary.AccountAdmin.GetByUserId(System.Int32)">
            <summary>
            Obtiene una lista de cuentas 
            segun el id del usuario al
            cual pertenecen.
            </summary>
            <param name="userId">
            Id del usuario por el cual
            realizar la busqueda.
            </param>
            <returns>
            Listado de cuentas.
            </returns>
        </member>
        <member name="M:ClassLibrary.AccountAdmin.GetUserIdForAccount(ClassLibrary.MessagingService,System.String)">
            <summary>
            Obtiene el id de usuario para 
            una cuenta en concreto.
            </summary>
            <param name="service">
            Servicio de mensajeria de la
            cuenta.
            </param>
            <param name="account">
            Identificador de la cuenta en el 
            servicio de mensajeria.
            </param>
            <returns>
            Id del usuario al que pertenece
            la cuenta.
            </returns>
        </member>
        <member name="M:ClassLibrary.AccountAdmin.ValidateData(ClassLibrary.Account)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.User">
            <summary>
            Esta clase representa Usuarios.
            </summary>
        </member>
        <member name="P:ClassLibrary.User.Id">
            <summary>
            Identificador de cada Usuario
            </summary>
        </member>
        <member name="P:ClassLibrary.User.FirstName">
            <summary>
            Nombre del Usuario
            </summary>
            <value>Almacenamos el nombre del Usuario en un string</value>
        </member>
        <member name="P:ClassLibrary.User.LastName">
            <summary>
            Apellido del Usuario
            </summary>
            <value>Almacenamos el apellido del Usuario en un string</value>
        </member>
        <member name="P:ClassLibrary.User.Deleted">
            <summary>
            Obtiene un valor que indica si el usuario fue eliminado
            </summary>
            <value><c>true</c> si el usuario fue eliminado, <c>false</c> en caso contrario.</value>
        </member>
        <member name="P:ClassLibrary.User.Role">
            <summary>
            Rol del Usuario
            </summary>
            <value>Almacenamos el rol del Usuario en un objeto de tipo Role</value>
        </member>
        <member name="P:ClassLibrary.User.Suspended">
            <summary>
            Estado de suspension del usuario.
            </summary>
        </member>
        <member name="M:ClassLibrary.User.#ctor(System.Int32,System.String,System.String,ClassLibrary.UserRole)">
            <summary>
            Constructor de la clase.
            </summary>
        </member>
        <member name="M:ClassLibrary.User.#ctor">
            <summary>
            Constructor de la clase.
            </summary>
        </member>
        <member name="M:ClassLibrary.User.LoadFromJson(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.User.Clone">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.User.ConvertToJson">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.UserAdmin">
            <summary>
            Esta clase representa la administracion de Usuarios.
            </summary>
        </member>
        <member name="M:ClassLibrary.UserAdmin.GetUserIsSuspended(System.Int32)">
            <summary>
            Verifica si un usuario
            esta o no suspendido.
            </summary>
            <param name="userId">
            Id del usuario para el
            cual se quiere verificar
            el estado de suspension.
            </param>
            <returns>
            Valor booleano con el
            estado de suspension.
            </returns>
        </member>
        <member name="M:ClassLibrary.UserAdmin.ValidateInsert(ClassLibrary.User)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.UserAdmin.ValidateData(ClassLibrary.User)">
            <inheritdoc/>
        </member>
        <member name="T:ClassLibrary.NotSupportedMessagingPlataformException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ClassLibrary.NotSupportedMessagingPlataformException.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.NotSupportedMessagingPlataformException"/>.
            </summary>
        </member>
        <member name="M:ClassLibrary.NotSupportedMessagingPlataformException.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.NotSupportedMessagingPlataformException"/>.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ClassLibrary.NotSupportedMessagingPlataformException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.NotSupportedMessagingPlataformException"/>.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:ClassLibrary.NotSupportedMessagingPlataformException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.NotSupportedMessagingPlataformException"/>.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ClassLibrary.CommandHandler">
            <summary>
            Encargada de recibir el mensaje y procesar
            el comando de acuerdo a la sesion del usuario.
            </summary>
        </member>
        <member name="M:ClassLibrary.CommandHandler.HandleMessage(ClassLibrary.MessageWrapper)">
            <summary>
            Procesa el comando enviado por el usuario
            de acuerdo a su sesion y lo envia el punto de
            entrada de la cadena de comandos.
            </summary>
            <param name="message">
            Contenedor del mensaje enviado por el usuario.
            </param>
            <returns>Texto del mensaje de respuesta.</returns>
        </member>
        <member name="T:ClassLibrary.MessageHandler">
            <summary>
            Encargado de recibir un mensaje y procesar
            el usuario que lo envio. Ajusta el mensaje
            de acuerdo a la autenticacion de este.
            </summary>
        </member>
        <member name="M:ClassLibrary.MessageHandler.HandleMessage(ClassLibrary.MessageWrapper)">
            <summary>
            Metodo llamado por los puntos de contacto
            con las API. Procesa el usuario del mensaje,
            y lo altera el mensaje segun el estado de
            autenticacion. Luego pasa al procesamiento de
            comandos en espera del mensaje de respuesta, el
            cual es enviado al manejador de respuesta para
            su envio.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:ClassLibrary.MessageWrapper">
            <summary>
            Contenedor de un mensaje.
            Tiene los datos del servicio de mensajeria
            la cuenta del emisor, el usuario local, su
            estado, y el mensaje en si.
            </summary>
        </member>
        <member name="M:ClassLibrary.MessageWrapper.#ctor(System.String,ClassLibrary.MessagingService,System.String)">
            <summary>
            Crea un contenedor de mensaje con la
            cuenta remota y el mensaje recibido.
            </summary>
            <param name="message">
            Texto del mensaje recibido.
            </param>
            <param name="service">
            Servicio de mensajeria desde el que se
            recibe el mensaje.
            </param>
            <param name="account">
            Cuenta remota en el servicio de mensajeria
            que envio el mensaje.
            </param>
        </member>
        <member name="P:ClassLibrary.MessageWrapper.Message">
            <summary>
            Texto del mensaje recibido.
            </summary>
        </member>
        <member name="P:ClassLibrary.MessageWrapper.Service">
            <summary>
            Servicio de mensajeria desde el que se
            recibe el mensaje.
            </summary>
        </member>
        <member name="P:ClassLibrary.MessageWrapper.Account">
            <summary>
            Cuenta remota en el servicio de mensajeria
            que envio el mensaje.
            </summary>
        </member>
        <member name="P:ClassLibrary.MessageWrapper.UserId">
            <summary>
            Identificador del usuario dentro
            de la plataforma.
            </summary>
        </member>
        <member name="P:ClassLibrary.MessageWrapper.UserStatus">
            <summary>
            Estado del usuario dentro de la
            plataforma.
            </summary>
        </member>
        <member name="T:ClassLibrary.ResponseHandler">
            <summary>
            Encargada de enviar la respuesta al usuario.
            </summary>
        </member>
        <member name="M:ClassLibrary.ResponseHandler.SendResponse(ClassLibrary.ResponseWrapper)">
            <summary>
            Envia el mensaje de respuesta al usuario.
            </summary>
            <param name="response">
            Contenedor de respuesta con el mensaje y cuenta
            remota precisos para el envio de la respuesta.
            </param>
        </member>
        <member name="T:ClassLibrary.ResponseWrapper">
            <summary>
            Contenedor de la respuesta.
            Contiene el mensaje de respuesta al
            usuario, y los datos de la cuenta 
            remota para saber a donde enviar el mensaje.
            </summary>
        </member>
        <member name="M:ClassLibrary.ResponseWrapper.#ctor(System.String,ClassLibrary.MessagingService,System.String)">
            <summary>
            Crea un contenedor de respuesta.
            </summary>
            <param name="message">
            Texto del mensaje a enviar.
            </param>
            <param name="service">
            Servicio de mensajeria hacia el que se
            debe enviar el mensaje.
            </param>
            <param name="account">
            Cuenta remota en el servicio de mensajeria
            al que se debe enviar el mensaje.
            </param>
        </member>
        <member name="P:ClassLibrary.ResponseWrapper.Message">
            <summary>
            Texto del mensaje a enviar.
            </summary>
            <value><c>string</c></value>
        </member>
        <member name="P:ClassLibrary.ResponseWrapper.Service">
            <summary>
            Servicio de mensajeria hacia el que se
            debe enviar el mensaje.
            </summary>
            <value><c>MessagingService</c></value>
        </member>
        <member name="P:ClassLibrary.ResponseWrapper.Account">
            <summary>
            Cuenta remota en el servicio de mensajeria
            al que se debe enviar el mensaje.
            </summary>
            <value><c>string</c></value>
        </member>
        <member name="T:ClassLibrary.InsertCompanyMaterialData">
            <summary>
            Contenedor con los datos
            del proceso de registro
            para un usuario
            </summary>
        </member>
        <member name="M:ClassLibrary.InsertCompanyMaterialData.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.InsertCompanyMaterialData"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.InsertCompanyMaterialData.CompanyMaterial">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="P:ClassLibrary.InsertCompanyMaterialData.MaterialCategory">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="T:ClassLibrary.InsertPublicationData">
            <summary>
            Contenedor con los datos
            del proceso de registro
            para un usuario
            </summary>
        </member>
        <member name="M:ClassLibrary.InsertPublicationData.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.InsertPublicationData"/>.
            </summary>
        </member>
        <member name="P:ClassLibrary.InsertPublicationData.CompanyMaterial">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="P:ClassLibrary.InsertPublicationData.Publication">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="T:ClassLibrary.ListData">
            <summary>
            
            </summary>
        </member>
        <member name="T:ClassLibrary.SelectCompanyMaterialData">
            <summary>
            Contenedor con los datos
            del proceso de registro
            para un usuario
            </summary>
        </member>
        <member name="M:ClassLibrary.SelectCompanyMaterialData.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase.
            </summary>
        </member>
        <member name="P:ClassLibrary.SelectCompanyMaterialData.Qualification">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="P:ClassLibrary.SelectCompanyMaterialData.CompanyMaterial">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="P:ClassLibrary.SelectCompanyMaterialData.MaterialCategory">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="P:ClassLibrary.SelectCompanyMaterialData.CompanyMaterialStock">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="T:ClassLibrary.SelectCompanyMaterialQualificationData">
            <summary>
            Contenedor con los datos
            del proceso de registro
            para un usuario
            </summary>
        </member>
        <member name="M:ClassLibrary.SelectCompanyMaterialQualificationData.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase.
            </summary>
        </member>
        <member name="P:ClassLibrary.SelectCompanyMaterialQualificationData.CompanyMaterialQualification">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="T:ClassLibrary.SignUpData">
            <summary>
            Contenedor con los datos
            del proceso de registro
            para un usuario
            </summary>
        </member>
        <member name="M:ClassLibrary.SignUpData.#ctor(System.String,ClassLibrary.MessagingService)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.SignUpData"/>.
            </summary>
            <param name="account">
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </param>
            <param name="service">
            Servicio de mensajeria utilizado
            por el usuario a registrar.
            </param>
        </member>
        <member name="P:ClassLibrary.SignUpData.Account">
            <summary>
            Identificador dentro del servicio de
            mensajeria del usuario a registrar.
            </summary>
        </member>
        <member name="P:ClassLibrary.SignUpData.Service">
            <summary>
            Servicio de mensajeria utilizado
            por el usuario a registrar.
            </summary>
        </member>
        <member name="P:ClassLibrary.SignUpData.Type">
            <summary>
            Tipo de registro que se va a procesar.
            </summary>
        </member>
        <member name="P:ClassLibrary.SignUpData.InviteCode">
            <summary>
            Codigo de invitacion utilizado por el 
            usuario para registrarse.
            </summary>
        </member>
        <member name="P:ClassLibrary.SignUpData.User">
            <summary>
            Instancia de <see cref="T:ClassLibrary.User"/> que almacenara
            los datos de usuario para registrarlos al
            terminar el proceso.
            </summary>
        </member>
        <member name="P:ClassLibrary.SignUpData.Company">
            <summary>
            Instancia de <see cref="T:ClassLibrary.Company"/> que almacenara
            los datos de la empresa para registrarlos al
            terminar el proceso, si es requerido.
            </summary>
        </member>
        <member name="P:ClassLibrary.SignUpData.Entrepreneur">
            <summary>
            Instancia de <see cref="T:ClassLibrary.Entrepreneur"/> que almacenara
            los datos del emprendedor para registrarlos al
            terminar el proceso, si es requerido.
            </summary>
        </member>
        <member name="T:ClassLibrary.DProcessData">
            <summary>
            Contenedor de los datos de un procedimiento
            multi-dialogo. Utilizado para almacenar datos
            temporales de un proceso en un punto del dialogo
            con el Bot para su uso en otros.
            </summary>
        </member>
        <member name="M:ClassLibrary.DProcessData.#ctor(System.String,System.String,System.Object)">
            <summary>
            Crea un contenedor nuevo.
            </summary>
            <param name="code">
            Codigo identificador del proceso.
            </param>
            <param name="initiator">
            Codigo del <p>DiscussionHandler</p>
            que inicia el proceso.
            </param>
            <param name="data">
            Objeto que contiene los datos especificos del proceso.
            </param>
        </member>
        <member name="M:ClassLibrary.DProcessData.GetData``1">
            <summary>
            Devuelve el objeto con los datos especificos del proceso.
            </summary>
            <typeparam name="T">
            Tipo del objeto que se busca devolver.
            </typeparam>
        </member>
        <member name="P:ClassLibrary.DProcessData.TypeOfData">
            <summary>
            Tipo del objeto que contiene los datos del proceso.
            </summary>
        </member>
        <member name="P:ClassLibrary.DProcessData.Code">
            <summary>
            Codigo identificador del proceso.
            </summary>
        </member>
        <member name="P:ClassLibrary.DProcessData.Initiator">
            <summary>
            Codigo del <p>DiscussionHandler</p>
            que inicia el proceso.
            </summary>
        </member>
        <member name="T:ClassLibrary.Session">
            <summary>
            Clase que contiene los datos de una sesion de usuario.
            </summary>
        </member>
        <member name="M:ClassLibrary.Session.#ctor(ClassLibrary.MessagingService,System.String,System.String)">
            <summary>
            Crea una instancia de Session a partir de una
            cuenta en un servicio de mensajeria y la posicion
            En el arbol de discusiones con el Bot.
            </summary>
            <param name="service">
            Servicio de mensajeria.
            </param>
            <param name="account">
            Identificador del usuario en el servicio de mensajeria.
            </param>
            <param name="menuLocation">
            Posicion actual del usuario en el arbol de discusiones
            con el Bot.
            </param>
        </member>
        <member name="P:ClassLibrary.Session.Service">
            <summary>
            Servicio de mensajeria.
            </summary>
            <value><c>MessagingService</c></value>
        </member>
        <member name="P:ClassLibrary.Session.Account">
            <summary>
            Identificador en el servicio de mensajeria.
            </summary>
        </member>
        <member name="P:ClassLibrary.Session.MenuLocation">
            <summary>
            Localizacion del usuario en el arbol de discusiones.
            </summary>
        </member>
        <member name="P:ClassLibrary.Session.LastActivity">
            <summary>
            Ultimo momento de actividad del usuario.
            </summary>
        </member>
        <member name="P:ClassLibrary.Session.Process">
            <summary>
            Datos del proceso actual si hay uno activo.
            </summary>
        </member>
        <member name="P:ClassLibrary.Session.UserId">
            <summary>
            Id del usuario en la plataforma
            </summary>
        </member>
        <member name="P:ClassLibrary.Session.EntityId">
            <summary>
            Id de empresa o emprendedor asociado al usuario.
            </summary>
        </member>
        <member name="T:ClassLibrary.SessionsContainer">
            <summary>
            Contenedor de sesiones. Almacena una lista
            de sesiones activas y permite crearlas/modificarlas.
            </summary>
        </member>
        <member name="M:ClassLibrary.SessionsContainer.CreateSession(ClassLibrary.MessagingService,System.String)">
            <summary>
            Crea una nueva sesion si esta no existe y la retorna.
            Si la sesion ya existe, carga esa y la retorna.
            </summary>
            <param name="service">
            Servicio de mensajeria de la sesion relevante.
            </param>
            <param name="account">
            Identificador en el servicio de mensajeria 
            de la sesion relevante.
            </param>
            <returns><c>Session</c></returns>
        </member>
        <member name="M:ClassLibrary.SessionsContainer.GetSession(ClassLibrary.MessagingService,System.String)">
            <summary>
            Carga una sesion del contenedor si esta existe.
            Ademas, chequea que esta no haya expirado. En
            caso de que si haya expirado, cambia el contexto
            para que la discusion siguiente lo refleje.
            </summary>
            <param name="service">
            Servicio de mensajeria de la sesion relevante.
            </param>
            <param name="account">
            Identificador en el servicio de mensajeria 
            de la sesion relevante.
            </param>
            <returns><c>Session</c></returns>
        </member>
        <member name="T:ClassLibrary.StorageProviderInProcess">
            <summary>
            Proveedor de storage In Process.
            </summary>
        </member>
        <member name="M:ClassLibrary.StorageProviderInProcess.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:ClassLibrary.StorageProviderInProcess"/>.
            </summary>
        </member>
        <member name="M:ClassLibrary.StorageProviderInProcess.SelectAll``1">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.StorageProviderInProcess.Insert``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.StorageProviderInProcess.Update``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:ClassLibrary.StorageProviderInProcess.Delete``1(System.Int32)">
            <inheritdoc/>
        </member>
    </members>
</doc>
